<UserControl x:Class="SimpleTasks.Controls.RoundTimePicker"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="clr-namespace:SimpleTasks.Controls"
    xmlns:converters="clr-namespace:SimpleTasks.Conventers"
    mc:Ignorable="d"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    d:DesignHeight="460" d:DesignWidth="460">

    <UserControl.Resources>
        <SolidColorBrush x:Key="HoursAmBackgroundBrush" Color="{StaticResource PhoneAccentColor}" Opacity="0.3"/>
        <SolidColorBrush x:Key="HoursAmForegroundBrush" Color="{StaticResource PhoneAccentColor}" Opacity="0.7"/>
        <SolidColorBrush x:Key="HoursPmBackgroundBrush" Color="{StaticResource PhoneAccentColor}" Opacity="0.8"/>
        <SolidColorBrush x:Key="HoursPmForegroundBrush" Color="{StaticResource PhoneAccentColor}" Opacity="1.0"/>
        <SolidColorBrush x:Key="MinutesBackgroundBrush" Color="{StaticResource PhoneAccentColor}" Opacity="0.2"/>
        <SolidColorBrush x:Key="MinutesForegroundBrush" Color="{StaticResource PhoneAccentColor}" Opacity="0.5"/>
        <SolidColorBrush x:Key="TimeForegroundSubtleBrush" Color="{StaticResource PhoneForegroundColor}" Opacity="0.4"/>
        <SolidColorBrush x:Key="TimeForegroundBrush" Color="{StaticResource PhoneForegroundColor}" Opacity="1.0"/>

        <Storyboard x:Name="HoursAngleAnimation" Completed="HoursAngleAnimation_Completed">
            <DoubleAnimation Storyboard.TargetName="AngleHoursGrabberCompositeTransform"
        		Storyboard.TargetProperty="Rotation"
        		From="{Binding HoursAngleAnimateFrom}"
        		To="{Binding HoursAngleAnimateTo}"
        		Duration="{Binding CurrentHoursAnimationDuration}">
                <DoubleAnimation.EasingFunction>
                    <SineEase EasingMode="EaseOut" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="AngleHoursCompositeTransform"
        		Storyboard.TargetProperty="Rotation"
        		From="{Binding HoursAngleAnimateFrom}"
        		To="{Binding HoursAngleAnimateTo}"
        		Duration="{Binding CurrentHoursAnimationDuration}">
                <DoubleAnimation.EasingFunction>
                    <SineEase EasingMode="EaseOut" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="AngleHoursRingSlice"
        		Storyboard.TargetProperty="EndAngle"
        		From="{Binding HoursAngleAnimateFrom}"
        		To="{Binding HoursAngleAnimateTo}"
        		Duration="{Binding CurrentHoursAnimationDuration}">
                <DoubleAnimation.EasingFunction>
                    <SineEase EasingMode="EaseOut" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Name="MinutesAngleAnimation" Completed="MinutesAngleAnimation_Completed">
            <DoubleAnimation Storyboard.TargetName="AngleMinutesGrabberCompositeTransform"
        		Storyboard.TargetProperty="Rotation"
        		From="{Binding MinutesAngleAnimateFrom}"
        		To="{Binding MinutesAngleAnimateTo}"
        		Duration="{Binding CurrentMinutesAnimationDuration}">
                <DoubleAnimation.EasingFunction>
                    <SineEase EasingMode="EaseOut" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="AngleMinutesCompositeTransform"
        		Storyboard.TargetProperty="Rotation"
        		From="{Binding MinutesAngleAnimateFrom}"
        		To="{Binding MinutesAngleAnimateTo}"
        		Duration="{Binding CurrentMinutesAnimationDuration}">
                <DoubleAnimation.EasingFunction>
                    <SineEase EasingMode="EaseOut" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="AngleMinutesRingSlice"
        		Storyboard.TargetProperty="EndAngle"
        		From="{Binding MinutesAngleAnimateFrom}"
        		To="{Binding MinutesAngleAnimateTo}"
        		Duration="{Binding CurrentMinutesAnimationDuration}">
                <DoubleAnimation.EasingFunction>
                    <SineEase EasingMode="EaseOut" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
    </UserControl.Resources>

    <Grid Width="460" Height="460">

        <!--kolečka-->
        <Grid>
            <!-- ring -->
            <controls:RingSlice IsHitTestVisible="False" InnerRadius="130" Radius="180" Fill="{StaticResource MinutesBackgroundBrush}" StartAngle="0" EndAngle="359.99"/>
            <controls:RingSlice x:Name="AngleMinutesRingSlice" InnerRadius="130" Radius="180" Fill="{StaticResource MinutesForegroundBrush}" StartAngle="0" EndAngle="{Binding MinutesAngle}"/>

            <controls:RingSlice IsHitTestVisible="False" InnerRadius="80" Radius="132" Fill="{Binding CurrentHoursBackgroundBrush}" StartAngle="0" EndAngle="359.99"/>
            <controls:RingSlice x:Name="AngleHoursRingSlice" InnerRadius="80" Radius="132" Fill="{Binding CurrentHoursForegroundBrush}" StartAngle="0" EndAngle="{Binding HoursAngle}"/>

            <!-- grabber minutes -->
            <Grid RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <CompositeTransform x:Name="AngleMinutesGrabberCompositeTransform" Rotation="{Binding MinutesAngle}"/>
                </Grid.RenderTransform>
                <Canvas Width="50" Height="55" Margin="0,-403,0,0">
                    <Ellipse Name="GrabberMinutes" Width="50" Height="50" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" StrokeLineJoin="Round" Stroke="{StaticResource PhoneForegroundBrush}" StrokeThickness="4" Fill="{StaticResource PhoneBackgroundBrush}"/>
                    <Path Width="14.25" Height="8" Canvas.Left="17.9312" Canvas.Top="47.0" Stretch="Fill" StrokeLineJoin="Miter" Stroke="{StaticResource PhoneForegroundBrush}" Fill="{StaticResource PhoneForegroundBrush}" Data="F1 M 33.0313,48.0417L 18.2,48.0417L 25.5,55.6354L 33.0313,48.0417 Z "/>
                    <Canvas.CacheMode>
                        <BitmapCache RenderAtScale="1"/>
                    </Canvas.CacheMode>
                </Canvas>
            </Grid>

            <!-- touch grid minutes -->
            <Grid Background="Transparent" ManipulationStarted="OnManipulationStartedMinutes" ManipulationDelta="OnManipulationDeltaMinutes" ManipulationCompleted="OnManipulationCompletedMinutes">
                <Grid.Clip>
                    <RectangleGeometry Rect="190,0,80,80">
                        <RectangleGeometry.Transform>
                            <CompositeTransform x:Name="AngleMinutesCompositeTransform" Rotation="{Binding MinutesAngle}" CenterX="230" CenterY="230" />
                        </RectangleGeometry.Transform>
                    </RectangleGeometry>
                </Grid.Clip>
            </Grid>

            <!-- grabber hours -->
            <Grid RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <CompositeTransform x:Name="AngleHoursGrabberCompositeTransform" Rotation="{Binding HoursAngle}"/>
                </Grid.RenderTransform>
                <Canvas Width="50" Height="55" Margin="0,-308,0,0">
                    <Ellipse Name="GrabberHours" Width="50" Height="50" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" StrokeLineJoin="Round" Stroke="{StaticResource PhoneForegroundBrush}" StrokeThickness="4" Fill="{StaticResource PhoneBackgroundBrush}"/>
                    <Path Width="14.25" Height="8" Canvas.Left="17.9312" Canvas.Top="47.0" Stretch="Fill" StrokeLineJoin="Miter" Stroke="{StaticResource PhoneForegroundBrush}" Fill="{StaticResource PhoneForegroundBrush}" Data="F1 M 33.0313,48.0417L 18.2,48.0417L 25.5,55.6354L 33.0313,48.0417 Z "/>
                    <Canvas.CacheMode>
                        <BitmapCache RenderAtScale="1"/>
                    </Canvas.CacheMode>
                </Canvas>
            </Grid>

            <!-- touch grid hours -->
            <Grid Background="Transparent" ManipulationStarted="OnManipulationStartedHours" ManipulationDelta="OnManipulationDeltaHours" ManipulationCompleted="OnManipulationCompletedHours">
                <Grid.Clip>
                    <RectangleGeometry Rect="190,50,80,80">
                        <RectangleGeometry.Transform>
                            <CompositeTransform x:Name="AngleHoursCompositeTransform" Rotation="{Binding HoursAngle}" CenterX="230" CenterY="230" />
                        </RectangleGeometry.Transform>
                    </RectangleGeometry>
                </Grid.Clip>
            </Grid>

        </Grid>

        <!--<StackPanel IsHitTestVisible="False">
            <TextBlock Text="{Binding Time}" />
            <TextBlock Text="{Binding Hours}" />
            <TextBlock Text="{Binding Hours12}" />
            <TextBlock Text="{Binding Minutes}" />
            <TextBlock Text="{Binding IsAm}" />
        </StackPanel>-->

        <!--čas-->
        <TextBlock Margin="0,15,0,15"
				   HorizontalAlignment="Center"
				   VerticalAlignment="Center"
				   FontSize="{StaticResource PhoneFontSizeExtraLarge}"
				   Foreground="{StaticResource TimeForegroundSubtleBrush}" 
				   FontFamily="{StaticResource PhoneFontFamilyLight}" >
                   <Run Text="{Binding HoursText}" Foreground="{StaticResource TimeForegroundBrush}"/>:<Run Text="{Binding Minutes, StringFormat=D2}" Foreground="{StaticResource TimeForegroundBrush}"/><Run Text="{Binding AmPmText}" FontSize="{StaticResource PhoneFontSizeLarge}" />
        </TextBlock>
    </Grid>
</UserControl>