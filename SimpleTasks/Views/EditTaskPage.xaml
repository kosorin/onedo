<phone:PhoneApplicationPage
    x:Class="SimpleTasks.Views.EditTaskPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:controls="clr-namespace:SimpleTasks.Controls"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="PortraitOrLandscape" Orientation="Portrait"
    mc:Ignorable="d"
    shell:SystemTray.IsVisible="True"
    shell:SystemTray.BackgroundColor="{StaticResource PhoneChromeColor}"
    toolkit:TiltEffect.IsTiltEnabled="True">

    <toolkit:TransitionService.NavigationInTransition>
        <toolkit:NavigationInTransition>
            <toolkit:NavigationInTransition.Backward>
                <toolkit:SlideTransition Mode="SlideDownFadeIn" />
            </toolkit:NavigationInTransition.Backward>
            <toolkit:NavigationInTransition.Forward>
                <toolkit:SlideTransition Mode="SlideUpFadeIn" />
            </toolkit:NavigationInTransition.Forward>
        </toolkit:NavigationInTransition>
    </toolkit:TransitionService.NavigationInTransition>
    <toolkit:TransitionService.NavigationOutTransition>
        <toolkit:NavigationOutTransition>
            <toolkit:NavigationOutTransition.Backward>
                <toolkit:SlideTransition Mode="SlideDownFadeOut" />
            </toolkit:NavigationOutTransition.Backward>
            <toolkit:NavigationOutTransition.Forward>
                <toolkit:SlideTransition Mode="SlideUpFadeOut" />
            </toolkit:NavigationOutTransition.Forward>
        </toolkit:NavigationOutTransition>
    </toolkit:TransitionService.NavigationOutTransition>


    <phone:PhoneApplicationPage.Resources>
        <!--Region TitleTextBlock-->
        <SolidColorBrush x:Key="TitleCaretBrush" Color="{StaticResource PhoneAccentColor}" />

        <SolidColorBrush x:Key="TitleBorderBrush" Color="{StaticResource PhoneSubtleColor}" Opacity="0.6" />

        <Style x:Key="TitleTextBoxStyle" TargetType="toolkit:PhoneTextBox">
            <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilyNormal}"/>
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="CaretBrush" Value="{StaticResource TitleCaretBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,5" />
            <Setter Property="SelectionBackground" Value="{x:Null}"/>
            <Setter Property="SelectionForeground" Value="{x:Null}"/>
            <Setter Property="Padding" Value="{StaticResource PhoneBorderThickness}"/>
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="InputScope" Value="Text" />
            <Setter Property="HintStyle">
                <Setter.Value>
                    <Style TargetType="ContentControl">
                        <Setter Property="Foreground" Value="{StaticResource PhoneSubtleBrush}" />
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="toolkit:PhoneTextBox">
                        <Grid x:Name="RootGrid" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HintBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TextBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="TextBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TextBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="HorizontalAlignment" Storyboard.TargetName="Text">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <HorizontalAlignment>Stretch</HorizontalAlignment>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="HintBorderBrush" 
                                                            Storyboard.TargetProperty="Color"
                                                            To="{StaticResource PhoneAccentColor}"
                                                            Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="ContentElement" 
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="HintContent" 
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0"
                                                             Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="HintBorderBrush" 
                                                            Storyboard.TargetProperty="Color"
                                                            To="{StaticResource PhoneChromeColor}"
                                                            Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="ContentElement" 
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0.75"
                                                             Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="HintContent" 
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0.8"
                                                             Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="LengthIndicatorStates">
                                    <VisualState x:Name="LengthIndicatorVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LengthIndicator">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="0, 0, 0, 27"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="LengthIndicator">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="0.6"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0:0:0.350" To="32" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="LengthIndicator">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="6"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LengthIndicatorHidden">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.350" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="LengthIndicator">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="6"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="RootGrid">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="0, 0, 0, 0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="LengthIndicator">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.350" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LengthIndicator">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.350">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="LengthIndicatorBorder">
                                <TextBlock x:Name="LengthIndicator" Foreground="{StaticResource PhoneContrastBackgroundBrush}" FontSize="{StaticResource PhoneFontSizeNormal}" HorizontalAlignment="Right" Margin="{StaticResource PhoneMargin}" Opacity="0" TextAlignment="Right" VerticalAlignment="Bottom">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Border>
                            <Border x:Name="HintBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="{StaticResource PhoneTouchTargetOverhang}">
                                <Border.BorderBrush>
                                    <SolidColorBrush x:Name="HintBorderBrush" Color="{StaticResource PhoneChromeColor}" />
                                </Border.BorderBrush>
                                <Grid>
                                    <ContentControl x:Name="HintContent" Opacity="0.8" Background="Transparent" Content="{TemplateBinding Hint}" HorizontalAlignment="Left" Margin="3,0,3,0" Style="{TemplateBinding HintStyle}" Visibility="{TemplateBinding ActualHintVisibility}" VerticalAlignment="Center"/>
                                    <ContentControl x:Name="ContentElement" Opacity="0.75" BorderThickness="0" HorizontalContentAlignment="Stretch" Margin="{StaticResource PhoneTextBoxInnerMargin}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="Stretch"/>
                                </Grid>
                            </Border>
                            <Border x:Name="TextBorder" BorderBrush="{StaticResource PhoneDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" Margin="{StaticResource PhoneTouchTargetOverhang}" Visibility="Collapsed">
                                <TextBox x:Name="Text" Foreground="{StaticResource PhoneDisabledBrush}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="Left" SelectionForeground="{TemplateBinding SelectionForeground}" SelectionBackground="{TemplateBinding SelectionBackground}" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="{TemplateBinding TextWrapping}" Text="{TemplateBinding Text}"/>
                            </Border>
                            <Border x:Name="ActionIconBorder" Background="Transparent" HorizontalAlignment="Right" Height="72" VerticalAlignment="Bottom" Width="84">
                                <Image x:Name="ActionIcon" Height="26" Source="{TemplateBinding ActionIcon}" Width="26"/>
                            </Border>
                            <TextBlock x:Name="MeasurementTextBlock" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" IsHitTestVisible="False" Margin="8" Opacity="0" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="{TemplateBinding TextWrapping}" Text="{TemplateBinding Text}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--EndRegion-->

        <!--Region DueDate-->
        
        <!--Due Date Picker-->
        <ControlTemplate x:Key="DueDatePickerTemplate">
            <Border x:Name="Border"
                    Style="{StaticResource ButtonBorderStyle}">
                <StackPanel Orientation="Horizontal">
                    <controls:Icon Style="{StaticResource CalendarIconStyle}"
                                   Color="{StaticResource ButtonForegroundBrush}"/>
                    <TextBlock Text="{Binding CurrentDueDate.Title}"
                               Style="{StaticResource ButtonTextBlockStyle}"/>
                </StackPanel>
            </Border>
        </ControlTemplate>
        <DataTemplate x:Key="DueDateFullModeTemplate">
            <StackPanel Margin="0,0,0,5">
                <TextBlock Text="{Binding Title}"
                           Style="{StaticResource PhoneTextExtraLargeStyle}" />
                <TextBlock Text="{Binding Date, Converter={StaticResource DateToStringConverter}}"
                           Style="{StaticResource PhoneTextSmallStyle}"
                           Visibility="{Binding Date, Converter={StaticResource NullToVisibilityConverter}}"/>
            </StackPanel>
        </DataTemplate>

        <!--Custom Due Date Picker-->
        <ControlTemplate x:Key="CustomDueDatePickerTemplate">
            <Button x:Name="DateTimeButton"
                    Content="{TemplateBinding toolkit:DatePicker.ValueString}"
                    Height="{TemplateBinding Height}">
                <Button.Template>
                    <ControlTemplate>
                        <Border x:Name="Border"
                                Background="{StaticResource PhoneAccentBrush}"
                                Height="{TemplateBinding Height}"
                                Padding="60,0,0,0">
                            <TextBlock Text="{TemplateBinding Button.Content}"
                                       FontSize="{StaticResource PhoneFontSizeMedium}"
                                       Style="{StaticResource ButtonTextBlockStyle}"/>
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </ControlTemplate>

        <!--Overdue Info-->
        <ControlTemplate x:Key="OverdueInfoTemplate" TargetType="ToggleButton">
            <Border Name="OverdueInfoBorder"
                    Height="0"
                    Opacity="0">
                <Border.Projection>
                    <PlaneProjection x:Name="OverdueInfoProjection"
                                     RotationX="90"
                                     CenterOfRotationX="0"
                                     CenterOfRotationY="0"/>
                </Border.Projection>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="OverdueInfoBackgroundBrush" 
                                                Storyboard.TargetProperty="Color"
                                                From="{StaticResource PhoneChromeColor}"
                                                To="{StaticResource PhoneAccentColor}"
                                                Duration="0:0:1"
                                                AutoReverse="True"
                                                RepeatBehavior="Forever">
                                    <ColorAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </ColorAnimation.EasingFunction>
                                </ColorAnimation>
                                <DoubleAnimation Storyboard.TargetName="OverdueInfoProjection"
                                                 Storyboard.TargetProperty="RotationX"
                                                 To="0"
                                                 Duration="0:0:2"
                                                 BeginTime="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <ElasticEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="OverdueInfoBorder"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0.85"
                                                 Duration="0:0:0.35"
                                                 BeginTime="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="OverdueInfoBorder"
                                                 Storyboard.TargetProperty="Height"
                                                 To="50"
                                                 Duration="0:0:0.35"
                                                 BeginTime="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="OverdueInfoProjection"
                                                 Storyboard.TargetProperty="RotationX"
                                                 To="90"
                                                 Duration="0:0:0.6">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseIn"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="OverdueInfoBorder"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0"
                                                 Duration="0:0:0.75">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseIn"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="OverdueInfoBorder"
                                                 Storyboard.TargetProperty="Height"
                                                 To="0"
                                                 Duration="0:0:0.6">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase EasingMode="EaseIn"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border.Background>
                    <SolidColorBrush x:Name="OverdueInfoBackgroundBrush"
                                     Color="{StaticResource PhoneSubtleColor}" />
                </Border.Background>
                <StackPanel Orientation="Horizontal">
                    <controls:Icon Style="{StaticResource OverdueIconStyle}"
                                   Color="{StaticResource ButtonForegroundBrush}"
                                   RenderTransformOrigin="0.5,0" >
                        <controls:Icon.RenderTransform>
                            <CompositeTransform ScaleX="0.8" ScaleY="0.8" />
                        </controls:Icon.RenderTransform>
                    </controls:Icon>
                    <TextBlock Text="{Binding LocalizedResources.DateOverdueText, Source={StaticResource LocalizedStrings}}"
                               FontSize="{StaticResource PhoneFontSizeMedium}"
                               Style="{StaticResource ButtonTextBlockStyle}"/>
                </StackPanel>
            </Border>
        </ControlTemplate>
        
        <!--EndRegion-->

        <!--Region Priority-->
        <ControlTemplate x:Key="PriorityButtonTemplate">
            <Border Style="{StaticResource ButtonBorderStyle}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="PriorityBorderBackgroundBrush" 
                                                Storyboard.TargetProperty="Color"
                                                To="{StaticResource PhoneAccentColor}"
                                                Duration="0:0:0.4"/>
                                <DoubleAnimation Storyboard.TargetName="NormalPriorityTextBlock" 
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0"
                                                 Duration="0:0:0.4" />
                                <DoubleAnimation Storyboard.TargetName="HighPriorityIcon" 
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1"
                                                 Duration="0:0:0.4" />
                                <DoubleAnimation Storyboard.TargetName="HighPriorityTextBlock" 
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1"
                                                 Duration="0:0:0.4" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="PriorityBorderBackgroundBrush" 
                                                Storyboard.TargetProperty="Color"
                                                To="{StaticResource PhoneSubtleColor}"
                                                Duration="0:0:0.4"/>
                                <DoubleAnimation Storyboard.TargetName="NormalPriorityTextBlock" 
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1"
                                                 Duration="0:0:0.4" />
                                <DoubleAnimation Storyboard.TargetName="HighPriorityIcon" 
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0.45"
                                                 Duration="0:0:0.4" />
                                <DoubleAnimation Storyboard.TargetName="HighPriorityTextBlock" 
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0"
                                                 Duration="0:0:0.4" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border.Background>
                    <SolidColorBrush x:Name="PriorityBorderBackgroundBrush"
                                     Color="{StaticResource PhoneSubtleColor}" />
                </Border.Background>
                <StackPanel Orientation="Horizontal">
                    <controls:Icon x:Name="HighPriorityIcon"
                                   Style="{StaticResource AlertIconStyle}"
                                   Color="{StaticResource ButtonForegroundBrush}"/>
                    <Grid>
                        <TextBlock Text="{Binding LocalizedResources.PriorityNormal, Source={StaticResource LocalizedStrings}}"
                                   Name="NormalPriorityTextBlock"
                                   Style="{StaticResource ButtonTextBlockStyle}"/>
                        <TextBlock Text="{Binding LocalizedResources.PriorityHigh, Source={StaticResource LocalizedStrings}}"
                                   Name="HighPriorityTextBlock"
                                   Opacity="0"
                                   Style="{StaticResource ButtonTextBlockStyle}"/>
                    </Grid>
                </StackPanel>
            </Border>
        </ControlTemplate>
        <!--EndRegion-->

        <!--Region Reminder-->
        
        <ControlTemplate x:Key="ReminderButtonTemplate">
            <Border Style="{StaticResource ButtonBorderStyle}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="ReminderBorderBackgroundBrush" 
                                                Storyboard.TargetProperty="Color"
                                                To="{StaticResource PhoneAccentColor}"
                                                Duration="0:0:0.4"/>
                                <DoubleAnimation Storyboard.TargetName="DisabledReminderIcon" 
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0"
                                                 Duration="0:0:0.4" />
                                <DoubleAnimation Storyboard.TargetName="ReminderIcon" 
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1"
                                                 Duration="0:0:0.4" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="ReminderBorderBackgroundBrush" 
                                                Storyboard.TargetProperty="Color"
                                                To="{StaticResource PhoneSubtleColor}"
                                                Duration="0:0:0.4"/>
                                <DoubleAnimation Storyboard.TargetName="DisabledReminderIcon" 
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1"
                                                 Duration="0:0:0.4" />
                                <DoubleAnimation Storyboard.TargetName="ReminderIcon" 
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0"
                                                 Duration="0:0:0.4" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border.Background>
                    <SolidColorBrush x:Name="ReminderBorderBackgroundBrush"
                                     Color="{StaticResource PhoneSubtleColor}" />
                </Border.Background>
                <StackPanel Orientation="Horizontal">
                    <Grid>
                        <controls:Icon x:Name="ReminderIcon"
                                       Style="{StaticResource ReminderIconStyle}"
                                       Color="{StaticResource ButtonForegroundBrush}"/>
                        <controls:Icon x:Name="DisabledReminderIcon"
                                       Style="{StaticResource DisabledReminderIconStyle}"
                                       Color="{StaticResource ButtonForegroundBrush}"/>
                    </Grid>
                    <TextBlock Text="připomenutí"
                               Style="{StaticResource ButtonTextBlockStyle}"/>
                </StackPanel>
            </Border>
        </ControlTemplate>

        <ControlTemplate x:Key="ReminderDatePickerTemplate">
            <Button x:Name="DateTimeButton"
                    Content="{TemplateBinding toolkit:DatePicker.ValueString}"
                    Height="{TemplateBinding Height}">
                <Button.Template>
                    <ControlTemplate>
                        <Border x:Name="Border"
                                Background="{StaticResource PhoneAccentBrush}"
                                Height="{TemplateBinding Height}">
                            <Border Background="#33000000"
                                    Padding="60,0,0,0">
                                <TextBlock Text="{TemplateBinding Button.Content}"
                                           FontSize="{StaticResource PhoneFontSizeMedium}"
                                           Style="{StaticResource ButtonTextBlockStyle}"/>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </ControlTemplate>

        <ControlTemplate x:Key="ReminderTimePickerTemplate">
            <Button x:Name="DateTimeButton"
                    Content="{TemplateBinding toolkit:TimePicker.ValueString}"
                    Height="{TemplateBinding Height}">
                <Button.Template>
                    <ControlTemplate>
                        <Border x:Name="Border"
                                Background="{StaticResource PhoneAccentBrush}"
                                Height="{TemplateBinding Height}">
                            <Border Background="#47000000"
                                    Padding="60,0,0,0">
                                <TextBlock Text="{TemplateBinding Button.Content}"
                                           FontSize="{StaticResource PhoneFontSizeMedium}"
                                           Style="{StaticResource ButtonTextBlockStyle}"/>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </ControlTemplate>
        
        <!--EndRegion-->
    </phone:PhoneApplicationPage.Resources>


    <Grid x:Name="LayoutRoot"
          Background="{StaticResource ApplicationBackgroundBrush}">

        <ScrollViewer>
            <!--ContentPanel - place additional content here-->
            <Grid x:Name="ContentPanel" Margin="12,40,12,0">
                <StackPanel>
                    <!--Nadpis-->
                    <toolkit:PhoneTextBox x:Name="TitleTextBox"
                                          Text="{Binding CurrentTask.Title, Mode=TwoWay}"
                                          Hint="{Binding LocalizedResources.TitleHintText, Source={StaticResource LocalizedStrings}}"
                                          Margin="20,0"
                                          KeyDown="PhoneTextBox_KeyDown" 
                                          Style="{StaticResource TitleTextBoxStyle}" />

                    <!--Výběr termínu-->
                    <StackPanel Orientation="Vertical"
                                Margin="0,20,0,0">
                        <toolkit:ListPicker x:Name="DueDatePicker"       
                                            Margin="50,0,50,0"
                                            ItemsSource="{Binding DueDateList}"
                                            SelectedItem="{Binding CurrentDueDate, Mode=TwoWay}"
                                            ExpansionMode="FullScreenOnly"
                                            FullModeHeader="{Binding LocalizedResources.ChooseDueDateText, Source={StaticResource LocalizedStrings}}"
                                            FullModeItemTemplate="{StaticResource DueDateFullModeTemplate}" 
                                            SelectionChanged="DueDatePicker_SelectionChanged"
                                            Template="{StaticResource DueDatePickerTemplate}"/>

                        <!--Vlastní termín-->
                        <toolkit:DatePicker x:Name="CustomDueDatePicker"
                                            Margin="50,0,50,0"
                                            IsEnabled="False"
                                            Visibility="Collapsed"
                                            Value="{Binding CustomDueDate.Date, Mode=TwoWay}"
                                            ValueStringFormat="{Binding Source={StaticResource DateTimeExtensions}, Path=Format}"
                                            Template="{StaticResource CustomDueDatePickerTemplate}">
                            <toolkit:DatePicker.Resources>
                                <Storyboard x:Name="DatePickerShow">
                                    <DoubleAnimation Storyboard.TargetName="CustomDueDatePicker"
                                                     Storyboard.TargetProperty="Height"
                                                     To="50"
                                                     Duration="0:0:0.35"
                                                     BeginTime="0:0:0.15">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                                <Storyboard x:Name="DatePickerHide">
                                    <DoubleAnimation Storyboard.TargetName="CustomDueDatePicker"
                                                     Storyboard.TargetProperty="Height"
                                                     To="0"
                                                     Duration="0:0:0.35"
                                                     BeginTime="0:0:0.1">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase EasingMode="EaseIn"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </toolkit:DatePicker.Resources>
                        </toolkit:DatePicker>

                        <!--Overdue-->
                        <ToggleButton Margin="50,0,50,20"
                                      IsChecked="{Binding IsOverdue}"
                                      Template="{StaticResource OverdueInfoTemplate}"
                                      IsEnabled="False" />
                    </StackPanel>

                    <!--Priorita-->
                    <ToggleButton Margin="50,0,50,0"
                                  IsChecked="{Binding CurrentTask.IsImportant, Mode=TwoWay}"
                                  Template="{StaticResource PriorityButtonTemplate}"/>

                    <!--Připomenutí-->
                    <StackPanel Orientation="Vertical"
                                Margin="0,20,0,0">
                        <ToggleButton Margin="50,0,50,0"
                                      Template="{StaticResource ReminderButtonTemplate}"
                                      IsChecked="{Binding CurrentTask.HasReminder, Mode=TwoWay}"
                                      Checked="ToggleButton_Checked" 
                                      Unchecked="ToggleButton_Unchecked"/>

                        <Grid x:Name="ReminderGrid"
                              Visibility="{Binding CurrentTask.HasReminder, Mode=OneTime, 
                                           Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/> 
                            </Grid.RowDefinitions>
                            <Grid.Resources>
                                <Storyboard x:Name="ReminderPickerShow">
                                    <DoubleAnimation Storyboard.TargetName="ReminderGrid"
                                                     Storyboard.TargetProperty="Height"
                                                     To="100"
                                                     Duration="0:0:0.4">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                                <Storyboard x:Name="ReminderPickerHide">
                                    <DoubleAnimation Storyboard.TargetName="ReminderGrid"
                                                     Storyboard.TargetProperty="Height"
                                                     To="0"
                                                     Duration="0:0:0.4">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase EasingMode="EaseIn"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </Grid.Resources>
                            
                            <!--Datum-->
                            <toolkit:DatePicker Name="ReminderDatePicker"
                                                Grid.Row="0"
                                                Margin="50,0,50,0"
                                                IsEnabled="True"
                                                Visibility="Visible"
                                                Value="{Binding CurrentTask.ReminderDate, Mode=TwoWay}"
                                                ValueStringFormat="{Binding Source={StaticResource DateTimeExtensions}, Path=Format}"
                                                Template="{StaticResource ReminderDatePickerTemplate}"/>
                            
                            <!--Čas-->
                            <toolkit:TimePicker Name="ReminderTimePicker"
                                                Grid.Row="1"
                                                Margin="50,0,50,0"
                                                IsEnabled="True"
                                                Visibility="Visible"
                                                Value="{Binding CurrentTask.ReminderDate, Mode=TwoWay}"
                                                Template="{StaticResource ReminderTimePickerTemplate}" />
                        </Grid>
                        
                    </StackPanel>
                    
                </StackPanel>
            </Grid>
        </ScrollViewer>
    </Grid>

</phone:PhoneApplicationPage>