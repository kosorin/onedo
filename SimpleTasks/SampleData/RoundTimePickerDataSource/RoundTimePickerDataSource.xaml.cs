//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.

using System;
using System.ComponentModel;
using System.Windows;

namespace Expression.Blend.SampleData.RoundTimePickerDataSource
{
// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class RoundTimePickerDataSource { }
#else

	public class RoundTimePickerDataSource : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		public RoundTimePickerDataSource()
		{
			try
			{
				Uri resourceUri = new Uri("/SimpleTasks;component/SampleData/RoundTimePickerDataSource/RoundTimePickerDataSource.xaml", UriKind.RelativeOrAbsolute);
				Application.LoadComponent(this, resourceUri);
			}
			catch
			{
			}
		}

		private double _HoursText = 0;

		public double HoursText
		{
			get
			{
				return this._HoursText;
			}

			set
			{
				if (this._HoursText != value)
				{
					this._HoursText = value;
					this.OnPropertyChanged("HoursText");
				}
			}
		}

		private double _Minutes = 0;

		public double Minutes
		{
			get
			{
				return this._Minutes;
			}

			set
			{
				if (this._Minutes != value)
				{
					this._Minutes = value;
					this.OnPropertyChanged("Minutes");
				}
			}
		}

		private string _AmPmText = string.Empty;

		public string AmPmText
		{
			get
			{
				return this._AmPmText;
			}

			set
			{
				if (this._AmPmText != value)
				{
					this._AmPmText = value;
					this.OnPropertyChanged("AmPmText");
				}
			}
		}

		private double _MinutesAngle = 0;

		public double MinutesAngle
		{
			get
			{
				return this._MinutesAngle;
			}

			set
			{
				if (this._MinutesAngle != value)
				{
					this._MinutesAngle = value;
					this.OnPropertyChanged("MinutesAngle");
				}
			}
		}

		private double _HoursAngle = 0;

		public double HoursAngle
		{
			get
			{
				return this._HoursAngle;
			}

			set
			{
				if (this._HoursAngle != value)
				{
					this._HoursAngle = value;
					this.OnPropertyChanged("HoursAngle");
				}
			}
		}
	}
#endif
}
